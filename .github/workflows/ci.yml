# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: CI Workflow
on:
  # Run this workflow every time a new commit pushed to upstream/fork repository.
  # Run workflow on fork repository will help contributors find and resolve issues before sending a PR.
  push:
  pull_request:
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.actor }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  golangci:
    name: lint
    runs-on: ubuntu-22.04
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - name: install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21.10
      - name: lint
        run: hack/verify-staticcheck.sh
  build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.21.10
    - name: Build
      run: go build -v ./...
    - name: Test
      run: go test -v ./...
  e2e:
    name: e2e test
    needs: build
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        k8s: [ v1.24.2, v1.25.1, v1.26.0 ]
    steps:
      - name: install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.4
      - name: checkout  karmada code
        uses: actions/checkout@v3
        with:
          repository: karmada-io/karmada
          ref: master
      - name: setup e2e test environment
        run: |
          export CLUSTER_VERSION=kindest/node:${{ matrix.k8s }}
          hack/local-up-karmada.sh
      - name: checkout local code
        uses: actions/checkout@v3
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          # We need to guess version via git tags.
          fetch-depth: 0
      - name: deploy multicluster provider
        run: |
          hack/deploy-provider.sh
